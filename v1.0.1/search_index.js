var documenterSearchIndex = {"docs":
[{"location":"Passivation/","page":"Passivation","title":"Passivation","text":"CurrentModule = Passivation","category":"page"},{"location":"Passivation/#Passivation","page":"Passivation","title":"Passivation","text":"","category":"section"},{"location":"Passivation/","page":"Passivation","title":"Passivation","text":"Documentation for Passivation.","category":"page"},{"location":"Passivation/","page":"Passivation","title":"Passivation","text":"","category":"page"},{"location":"Passivation/","page":"Passivation","title":"Passivation","text":"Modules = [Passivation]","category":"page"},{"location":"Passivation/#Passivation.ispassive-Tuple{ControlSystemsBase.StateSpace}","page":"Passivation","title":"Passivation.ispassive","text":"ispassive(Σ; opt=:lmi, kwargs...)\n\nChecks if the system Σ is passive. The function returns true if the system is passive and false otherwise. If opt is set to :lmi, the KYP lmi is tried to solve. If opt is set to :popov, the Popov function is sampled to check passivity.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.klap","page":"Passivation","title":"Passivation.klap","text":"klap(Σ::StateSpace; L0=L0(Σ), M=M(Σ), P=gram(Σ, :c); recycl=:schur, restart=false, α=1e-8, ε=1e-4, verbose=true, kwargs...) -> Σp, res\n\nPassivates a system Σ using the KLAP method [1]. The optimization problem is solved using LBFGS.\n\n\n\n\n\n","category":"function"},{"location":"Passivation/#Passivation.klap_inital_guess","page":"Passivation","title":"Passivation.klap_inital_guess","text":"klap_inital_guess(Σ, ΔD=0.0; ε=0) -> L0, ΔD\n\nComputes an initial guess for the KLAP optimization problem. The initial guess is computed by perturbing the feedthrough matrix to achieve a passive realization. Then the perturbed system is used to compute the initial guess, see [1] for details.  The perturbation ΔD can be specified, otherwise it is computed using ΔD(Σ).\n\n\n\n\n\n","category":"function"},{"location":"Passivation/#Passivation.kyp-Tuple{ControlSystemsBase.StateSpace}","page":"Passivation","title":"Passivation.kyp","text":"X = kyp(Σ; optimizer=Hypatia.Optimizer, kwargs...)\n\nReturns a solution to the KYP inequality by solving the corresponding linear matrix inequality.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.kypare-Tuple{ControlSystemsBase.StateSpace, Any}","page":"Passivation","title":"Passivation.kypare","text":"W = kypare(Σ, X)\n\nReturns the residual of the KYP ARE for some solution candidate X.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.kypextremal","page":"Passivation","title":"Passivation.kypextremal","text":"X = kypmax(Σ; kwargs...)\n\nReturns the maximal or minimal solution to the KYP inequality by solving the Riccati equation for the stabilizing or anti-stabilizing solution.\n\n\n\n\n\n","category":"function"},{"location":"Passivation/#Passivation.kypmat-Tuple{ControlSystemsBase.StateSpace, Any}","page":"Passivation","title":"Passivation.kypmat","text":"W = kypmat(Σ, X)\n\nReturns the KYP matrix of the system Σ for the given matrix X.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.kypmax-Tuple{Any}","page":"Passivation","title":"Passivation.kypmax","text":"Xmin = kypmax(Σ; kwargs...)\n\nReturns the maximal solution to the KYP inequality by solving the Riccati equation for the anti-stabilizing solution.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.kypmin-Tuple{Any}","page":"Passivation","title":"Passivation.kypmin","text":"Xmin = kypmin(Σ; kwargs...)\n\nReturns the minimal solution to the KYP inequality by solving the Riccati equation for the stabilizing solution.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.lmi-Tuple{ControlSystemsBase.StateSpace}","page":"Passivation","title":"Passivation.lmi","text":"lmi(Σ::StateSpace; kwargs...) -> Σp, model\n\nSolves the passivation problem for a given state-space system Σ using the positive real LMI constraints [2].\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.lmi_tp-Tuple{ControlSystemsBase.StateSpace}","page":"Passivation","title":"Passivation.lmi_tp","text":"lmi_tp(Σ::StateSpace; kwargs...) -> Σp, model\n\nSolves the passivation problem for a given state-space system Σ using the positive real LMI constraints with trace parametrization [3, 4].\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.passivate","page":"Passivation","title":"Passivation.passivate","text":"passivate(Σ::StateSpace, method=:klap, args...; kwargs...) -> Σp, res\n\nPassivate the system Σ using the method method. The available methods are:\n\n:klap: KLAP optimization [1]\n:lmi: LMI optimization [2]\n:lmi_tp: LMI optimization with trace parametrization [3, 4]\n\nThe remaining arguments args and keyword arguments kwargs are passed to the corresponding passivation function.\n\n\n\n\n\n","category":"function"},{"location":"Passivation/#Passivation.popov-Tuple{ControlSystemsBase.StateSpace, Complex}","page":"Passivation","title":"Passivation.popov","text":"popov(Σ, s)\npopov(Σ, ω)\n\nEvaluates the popov function of the system Σ at the complex variable s or real frequencies ω.\n\nΦ(s) = Σ(s) + Σ(-s)'\n\nwhere Σ(s) is the frequency response (transfer function) of Σ at the complex variable s.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.popovplot-Tuple{Any, Vararg{Any}}","page":"Passivation","title":"Passivation.popovplot","text":"popovplot(Σ; args...; kwargs...)\npopovplot!(p, Σ; args...; kwargs...)\n\nPlots the minimal eigenvalue of the Popov function of the system Σ at the frequencies ω.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#Passivation.sampopov-Tuple{Any}","page":"Passivation","title":"Passivation.sampopov","text":"sampopov(Σ; ω=10 .^ range(-15, stop=5, length=5000)) -> Λmin, ω, Ωp, Ωnp, F, c\n\nSamples the Popov function of the system Σ at the frequencies ω. Returns the minimum eigenvalues of the sampled Popov function, the frequencies ω, the passive and non-passive intervals Ωp and Ωnp, the eigendecompositions F and the change points c.\n\n\n\n\n\n","category":"method"},{"location":"Passivation/#References","page":"Passivation","title":"References","text":"","category":"section"},{"location":"Passivation/","page":"Passivation","title":"Passivation","text":"J. Nicodemus, M. Voigt, S. Gugercin and B. Unger. KLAP: KYP Lemma Based Low-Rank Approximation for mathcalH_2-Optimal Passivation. ArXiv e-print 2501.05178 (2025).\n\n\n\nS. Grivet-Talocia and L. Silveira. Post-processing methods for passivity enforcement. In: Model Order Reduction: Volume 1 – System- and Data-Driven Methods and Algorithms, edited by P. Benner, S. Grivet-Talocia, A. Quarteroni, G. Rozza, W. Schilders and L. M. Silveira (De Gruyter, Berlin, Boston, 2021); pp. 139–180.\n\n\n\nB. Dumitrescu. Parameterization of Positive-Real Transfer Functions with Fixed Poles. IEEE Trans. Circuits Syst. I. Regul. Pap. 49, 523–526 (2002).\n\n\n\nC. Coelho, J. Phillips and L. Silveira. A Convex Programming Approach for Generating Guaranteed Passive Approximations to Tabulated Frequency-Data. IEEE Trans. Comput.-Aided Des. Integr. Circuits Syst. 23, 293–301 (2004).\n\n\n\n","category":"page"},{"location":"#KLAP:-KYP-Lemma-based-low-rank-approximation-for-\\mathcal{H}_2-optimal-passivation","page":"KLAP","title":"KLAP: KYP Lemma based low-rank approximation for mathcalH_2-optimal passivation","text":"","category":"section"},{"location":"","page":"KLAP","title":"KLAP","text":"This repository contains the code for the paper KLAP: KYP Lemma based low-rank approximation for mathcalH_2-optimal passivation.","category":"page"},{"location":"#Citing","page":"KLAP","title":"Citing","text":"","category":"section"},{"location":"","page":"KLAP","title":"KLAP","text":"If you use this project for academic work, please consider citing our publication:","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"J. Nicodemus, M. Voigt, S. Gugercin, and B. Unger\nKLAP: KYP Lemma based low-rank approximation for $\\mathcal{H}_2$-optimal passivation\nArXiv e-print 2501.05178, 2025.","category":"page"},{"location":"#Installation","page":"KLAP","title":"Installation","text":"","category":"section"},{"location":"","page":"KLAP","title":"KLAP","text":"This code base is using the Julia Language and DrWatson to make a reproducible scientific project named","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"klap","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"To (locally) reproduce this project, do the following:","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"Download this code base. Notice that raw data are typically not included in the git-history and may need to be downloaded independently.\nOpen a Julia console and do:\njulia> using Pkg\njulia> Pkg.add(\"DrWatson\") # install globally, for using `quickactivate`\njulia> Pkg.activate(\"path/to/this/project\")\njulia> Pkg.instantiate()","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"This will install all necessary packages for you to be able to run the scripts and everything should work out of the box, including correctly finding local paths.","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"You may notice that most scripts start with the commands:","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"using DrWatson\n@quickactivate \"klap\"","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"which auto-activate the project and enable local path handling from DrWatson.","category":"page"},{"location":"#Usage","page":"KLAP","title":"Usage","text":"","category":"section"},{"location":"","page":"KLAP","title":"KLAP","text":"There are two executable scripts main.jl and smartphone.jl located in the scripts directory:","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"main.jl applies and compares KLAP and LMI-based passivation methods on the ACC or CD player benchmark models.\nsmartphone.jl applies KLAP to the smartphone benchmark model and compares the results with the model obtained by perturbation of Hamiltonian eigenvalues.","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"Furthermore, an example.ipynb notebook is provided in the notebooks directory, which generates the contour plots from the Examples 3.7, 3.8, 3.11 and 3.12.","category":"page"},{"location":"#Contact","page":"KLAP","title":"Contact","text":"","category":"section"},{"location":"","page":"KLAP","title":"KLAP","text":"Jonas Nicodemus - jonas.nicodemus@simtech.uni-stuttgart.de","category":"page"},{"location":"","page":"KLAP","title":"KLAP","text":"Matthias Voigt - matthias.voigt@fernuni.ch\nSerkan Gugercin - gugercin@vt.edu\nBenjamin Unger - benjamin.unger@simtech.uni-stuttgart.de","category":"page"},{"location":"API/","page":"API","title":"API","text":"","category":"page"}]
}
